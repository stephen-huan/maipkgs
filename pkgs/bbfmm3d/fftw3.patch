From 6121389f2185472b833bc1f468d550d2335043ce Mon Sep 17 00:00:00 2001
From: Stephen Huan <stephen.huan@cgdct.moe>
Date: Tue, 19 Nov 2024 20:06:13 -0800
Subject: [PATCH 2/2] refactor: use fftw3

---
 include/H2_3D_Tree.hpp | 10 +++++-----
 include/compute.hpp    | 20 ++++++++++----------
 src/H2_3D_Tree.cpp     | 10 +++++-----
 3 files changed, 20 insertions(+), 20 deletions(-)

diff --git a/include/H2_3D_Tree.hpp b/include/H2_3D_Tree.hpp
index 4a680a3..c8a1a72 100644
--- a/include/H2_3D_Tree.hpp
+++ b/include/H2_3D_Tree.hpp
@@ -7,7 +7,7 @@
 
 #include"bbfmm.h"
 #include"environment.hpp"
-#include "rfftw.h"
+#include "fftw3.h"
 
 using namespace std;
 /*! The fmm tree */
@@ -40,8 +40,8 @@ public:
 	int dofn3_s;
 	int dofn3_f;
 	
-    rfftw_plan p_r2c;
-    rfftw_plan p_c2r;
+    fftw_plan p_r2c;
+    fftw_plan p_c2r;
     
     bool computed;
 	double *Kweights, *Cweights, *Tkz;
@@ -56,11 +56,11 @@ public:
 	void FMMSetup(nodeT **A, double *Tkz, double *Kweights,
                   double *Cweights, double L, doft *cutoff,
                   int n,  double epsilon, doft * dof,  int level, char *Kmat, char *Umat, char *Vmat,
-                  double *Ucomp, double *Vcomp, int& skipLevel, double alpha, int use_chebyshev,rfftw_plan p_r2c);
+                  double *Ucomp, double *Vcomp, int& skipLevel, double alpha, int use_chebyshev,fftw_plan p_r2c);
     
     void buildFMMTree();
     void ComputeKernelSVD(double *Kweights, int n,double epsilon, doft *dof, char*Kmat, char *Umat, char *Vmat, int symm,  double *Ucomp,double *Vcomp, double alphaAdjust, double boxLen);
-    void ComputeKernelUniformGrid(double *Kweights, int n, doft *dof,  char *Kmat, double alphaAdjust, rfftw_plan p_r2c);
+    void ComputeKernelUniformGrid(double *Kweights, int n, doft *dof,  char *Kmat, double alphaAdjust, fftw_plan p_r2c);
     
     void ComputeWeights(double *Tkz, int *Ktable, double *Kweights,
                         double *Cweights, int n,double alpha, int use_chebyshev);
diff --git a/include/compute.hpp b/include/compute.hpp
index d435450..edf76d0 100644
--- a/include/compute.hpp
+++ b/include/compute.hpp
@@ -7,7 +7,7 @@
 #include"bbfmm.h"
 #include "environment.hpp" 
 #include"kernel_Types.hpp"
-#include "rfftw.h"
+#include "fftw3.h"
 
 template <typename T>
 class H2_3D_Compute {
@@ -25,12 +25,12 @@ public:
     void FMMCompute(nodeT **A, vector3 *field, vector3 *source, double *charge,
                     double *K, double *U, double *VT, double *Tkz, int *Ktable,
                     double *Kweights, double *Cweights, double homogen,
-                    doft *cutoff, int n, doft *dof,double*stress, int use_chebyshev, rfftw_plan p_r2c,
-                    rfftw_plan p_c2r);
-    void UpwardPass(nodeT **A, vector3 *source, double *q, double *Cweights, double *Tkz, double *VT, double *Kweights, doft *cutoff, int n, doft *dof,  int use_chebyshev, rfftw_plan p_r2c);
+                    doft *cutoff, int n, doft *dof,double*stress, int use_chebyshev, fftw_plan p_r2c,
+                    fftw_plan p_c2r);
+    void UpwardPass(nodeT **A, vector3 *source, double *q, double *Cweights, double *Tkz, double *VT, double *Kweights, doft *cutoff, int n, doft *dof,  int use_chebyshev, fftw_plan p_r2c);
     void FMMInteraction(nodeT **A, double *E, int *Ktable, double *U,
                         double *VT, double *Kweights, int n, doft *dof,
-                        doft *cutoff, double homogen, int curTreeLevel, int use_chebyshev, rfftw_plan p_c2r);
+                        doft *cutoff, double homogen, int curTreeLevel, int use_chebyshev, fftw_plan p_c2r);
     void DownwardPass(nodeT **A, vector3 *field, vector3 *source,
                       double *Cweights, double *Tkz, double *q, doft *cutoff,
                       int n, doft *dof, double *stress, int use_chebyshev);
@@ -174,7 +174,7 @@ void H2_3D_Compute<T>::FMMDistribute(nodeT **A, vector3 *field, vector3 *source,
 }
 
 template <typename T>
-void H2_3D_Compute<T>::FMMCompute(nodeT **A, vector3 *field, vector3 *source, double *charge, double *K, double *U, double *VT, double *Tkz, int *Ktable, double *Kweights, double *Cweights, double homogen, doft *cutoff, int n, doft *dof, double *stress, int use_chebyshev, rfftw_plan p_r2c, rfftw_plan p_c2r) {
+void H2_3D_Compute<T>::FMMCompute(nodeT **A, vector3 *field, vector3 *source, double *charge, double *K, double *U, double *VT, double *Tkz, int *Ktable, double *Kweights, double *Cweights, double homogen, doft *cutoff, int n, doft *dof, double *stress, int use_chebyshev, fftw_plan p_r2c, fftw_plan p_c2r) {
 	UpwardPass(A,source,charge,Cweights,Tkz,VT,Kweights,cutoff,n,dof, use_chebyshev, p_r2c);
     // Computes all of the cell interactions
 	FMMInteraction(A,K,Ktable,U,VT,Kweights,n,dof,cutoff,homogen,0, use_chebyshev, p_c2r);
@@ -182,7 +182,7 @@ void H2_3D_Compute<T>::FMMCompute(nodeT **A, vector3 *field, vector3 *source, do
 }
 
 template <typename T>
-void H2_3D_Compute<T>::UpwardPass(nodeT **A, vector3 *source, double *q, double *Cweights, double *Tkz, double *VT, double *Kweights, doft *cutoff, int n, doft *dof, int use_chebyshev, rfftw_plan p_r2c) {
+void H2_3D_Compute<T>::UpwardPass(nodeT **A, vector3 *source, double *q, double *Cweights, double *Tkz, double *VT, double *Kweights, doft *cutoff, int n, doft *dof, int use_chebyshev, fftw_plan p_r2c) {
     
     int Ns = (*A)->Ns;                  // Number of source points
     int i, l;
@@ -323,7 +323,7 @@ void H2_3D_Compute<T>::UpwardPass(nodeT **A, vector3 *source, double *q, double
         }
         
         for (s=0, shift=0; s<dof->s; s++) {
-            rfftw_one(p_r2c, padx + shift, (*A)->sourcefre + shift);
+            fftw_execute_r2r(p_r2c, padx + shift, (*A)->sourcefre + shift);
             shift += padSize;
         }
         
@@ -337,7 +337,7 @@ template <typename T>
 void H2_3D_Compute<T>::FMMInteraction(nodeT **A, double *E, int *Ktable, double *U,
                                       double *VT, double *Kweights, int n, doft *dof,
                                       doft *cutoff, double homogen, int curTreeLevel, int use_chebyshev,
-                                      rfftw_plan p_c2r) {
+                                      fftw_plan p_c2r) {
     
     int shift = (curTreeLevel>=2) ? curTreeLevel-2: 0;
     shift *= !homogen;
@@ -445,7 +445,7 @@ void H2_3D_Compute<T>::FMMInteraction(nodeT **A, double *E, int *Ktable, double
         
         double res[padSize *dof->f];
         for (f=0; f<dof->f; f++)
-            rfftw_one(p_c2r, productfre + f*padSize, res + f*padSize);
+            fftw_execute_r2r(p_c2r, productfre + f*padSize, res + f*padSize);
         
         free(productfre);
         productfre=NULL;
diff --git a/src/H2_3D_Tree.cpp b/src/H2_3D_Tree.cpp
index 48b2f8b..6ca69ce 100644
--- a/src/H2_3D_Tree.cpp
+++ b/src/H2_3D_Tree.cpp
@@ -29,9 +29,9 @@ H2_3D_Tree::H2_3D_Tree(double L, int level, int n,  double epsilon, int use_cheb
     computed   =   false;
     
     int fftSize = (int)round(pow(2*n-1, 3));
-	p_r2c = rfftw_create_plan(fftSize, FFTW_REAL_TO_COMPLEX,
+	p_r2c = fftw_plan_r2r_1d(fftSize, NULL, NULL, FFTW_R2HC,
                                          FFTW_ESTIMATE);
-	p_c2r = rfftw_create_plan(fftSize, FFTW_COMPLEX_TO_REAL,
+	p_c2r = fftw_plan_r2r_1d(fftSize, NULL, NULL, FFTW_HC2R,
                                          FFTW_ESTIMATE);
 }
 
@@ -64,7 +64,7 @@ void H2_3D_Tree::buildFMMTree() {
 void H2_3D_Tree::FMMSetup(nodeT **A, double *Tkz,  double *Kweights,
                           double *Cweights, double boxLen, doft *cutoff,
                           int n, double epsilon, doft * dof,  int treeLevel, char *Kmat, char *Umat, char *Vmat,
-                          double *Ucomp, double *Vcomp,int& skipLevel, double alpha, int use_chebyshev, rfftw_plan
+                          double *Ucomp, double *Vcomp,int& skipLevel, double alpha, int use_chebyshev, fftw_plan
                           p_r2c) {
     
 	vector3 center;
@@ -630,7 +630,7 @@ void H2_3D_Tree::ComputeKernelSVD(double *Kweights, int n,double epsilon, doft *
  * Computes the kernel for 316(2n-1)^3 interactions between Uniform
  * Grid nodes. Does not compute SVD.
  */
-void H2_3D_Tree::ComputeKernelUniformGrid(double *Kweights, int n, doft *dof, char *Kmat, double alphaAdjust, rfftw_plan p_r2c) {
+void H2_3D_Tree::ComputeKernelUniformGrid(double *Kweights, int n, doft *dof, char *Kmat, double alphaAdjust, fftw_plan p_r2c) {
     
     /* TODO: multi-dof, alphaAdjust */
     
@@ -700,7 +700,7 @@ void H2_3D_Tree::ComputeKernelUniformGrid(double *Kweights, int n, doft *dof, ch
                     shiftGlo = countM2L *M2LSize;
                     
                     for (i=0, shiftLoc=0; i<dof2; i++) {
-                        rfftw_one(p_r2c, MatM2L + shiftLoc, freqMat +
+                        fftw_execute_r2r(p_r2c, MatM2L + shiftLoc, freqMat +
                                   shiftGlo + shiftLoc);
                         shiftLoc += reducedMatSize;
                     }
-- 
2.46.1

